{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/q1452440/code/Edureka/ReactNative/ReactNativGithub/react-native-hello-world/App.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { StatusBar } from 'expo-status-bar';\nimport React from 'react';\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { TextInput } from 'react-native-gesture-handler';\nexport default function App() {\n  var _React$useState = React.useState(\"\"),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      value = _React$useState2[0],\n      setValue = _React$useState2[1];\n\n  var _React$useState3 = React.useState({\n    tasks: []\n  }),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      state = _React$useState4[0],\n      addTask = _React$useState4[1];\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }\n  }, \"Rany ElHousieny To DO List\"), React.createElement(TextInput, {\n    style: {\n      borderColor: 'black',\n      borderWidth: 2\n    },\n    onChangeText: function onChangeText(text) {\n      return setValue(text);\n    },\n    placeholder: \"Add a task\",\n    value: value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }\n  }), React.createElement(Button, {\n    title: \"Add Task\",\n    onPress: function onPress() {\n      addTask(_objectSpread(_objectSpread({}, state), {}, {\n        tasks: [].concat(_toConsumableArray(state.tasks), [value])\n      }));\n      setValue(\"\");\n      console.log(state);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }\n  }), React.createElement(StatusBar, {\n    style: \"auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});","map":{"version":3,"sources":["/Users/q1452440/code/Edureka/ReactNative/ReactNativGithub/react-native-hello-world/App.js"],"names":["StatusBar","React","TextInput","App","useState","value","setValue","tasks","state","addTask","styles","container","borderColor","borderWidth","text","console","log","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent"],"mappings":";;;;;;;;;AAAA,SAASA,SAAT,QAA0B,iBAA1B;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;;;AAEA,SAASC,SAAT,QAA0B,8BAA1B;AAEA,eAAe,SAASC,GAAT,GAAgB;AAAA,wBACDF,KAAK,CAACG,QAAN,CAAgB,EAAhB,CADC;AAAA;AAAA,MACrBC,KADqB;AAAA,MACdC,QADc;;AAAA,yBAEFL,KAAK,CAACG,QAAN,CAAe;AAAEG,IAAAA,KAAK,EAAE;AAAT,GAAf,CAFE;AAAA;AAAA,MAErBC,KAFqB;AAAA,MAEdC,OAFc;;AAG7B,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEC,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCADF,EAEE,oBAAC,SAAD;AACE,IAAA,KAAK,EAAG;AAAEC,MAAAA,WAAW,EAAE,OAAf;AAAwBC,MAAAA,WAAW,EAAE;AAArC,KADV;AAEE,IAAA,YAAY,EAAG,sBAAAC,IAAI;AAAA,aAAIR,QAAQ,CAAEQ,IAAF,CAAZ;AAAA,KAFrB;AAGE,IAAA,WAAW,EAAC,YAHd;AAIE,IAAA,KAAK,EAAET,KAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAOE,oBAAC,MAAD;AACE,IAAA,KAAK,EAAC,UADR;AAEE,IAAA,OAAO,EAAG,mBAAM;AACdI,MAAAA,OAAO,iCAAOD,KAAP;AAAcD,QAAAA,KAAK,+BAAOC,KAAK,CAACD,KAAb,IAAoBF,KAApB;AAAnB,SAAP;AACAC,MAAAA,QAAQ,CAAC,EAAD,CAAR;AACAS,MAAAA,OAAO,CAACC,GAAR,CAAYR,KAAZ;AACD,KANH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,EAeE,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAC,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAfF,CADF;AAmBD;AAED,IAAME,MAAM,GAAGO,UAAU,CAACC,MAAX,CAAkB;AAC/BP,EAAAA,SAAS,EAAE;AACTQ,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,eAAe,EAAE,MAFR;AAGTC,IAAAA,UAAU,EAAE,QAHH;AAITC,IAAAA,cAAc,EAAE;AAJP;AADoB,CAAlB,CAAf","sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport React from 'react';\nimport { Button, StyleSheet, Text, View } from 'react-native';\nimport { TextInput } from 'react-native-gesture-handler';\n\nexport default function App () {\n  const [ value, setValue ] = React.useState( \"\" );\n  const [ state, addTask ] = React.useState({ tasks: []});\n  return (\n    <View style={styles.container}>\n      <Text>Rany ElHousieny To DO List</Text>\n      <TextInput\n        style={ { borderColor: 'black', borderWidth: 2 } }\n        onChangeText={ text => setValue( text ) }\n        placeholder=\"Add a task\"\n        value={value} />\n      <Button\n        title=\"Add Task\"\n        onPress={ () => {\n          addTask( { ...state, tasks: [ ...state.tasks, value ] } );\n          setValue(\"\")\n          console.log(state)\n        } }\n      />\n      <StatusBar style=\"auto\" />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n"]},"metadata":{},"sourceType":"module"}